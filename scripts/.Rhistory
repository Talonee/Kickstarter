plot <- lm(dat1[[1]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[2]])
anova(plot)$"Sum Sq"
plot(dat2)
plot <- lm(dat2[[1]]~dat2[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[1]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[2]])
anova(plot)$"Sum Sq"
#hw_lect14_2
dat1 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat1.txt",
header = TRUE
)
dat2 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat2.txt",
header = TRUE
)
par(mfrow=c(2,1))
plot(dat1)
plot <- lm(dat1[[1]]~dat1[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[1]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and y has the greatest
# fit with an R-squared value of 50.48861 and a std.dev.
# of error of 459.7. Visually, the plot is mostly linear
# with some dispersion at the lowest and highest point of
# the plot.
plot(dat2)
plot <- lm(dat2[[1]]~dat2[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[1]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and x2 has the greatest
# fit with an R-squared value of 400.3 and a std.dev.
# of error of 103.4. Visually, the plot shows a high
# relation in interaction and collinearity between
# x1 and x2. Most data points are allocated in a high
# density, linear fashion.
par(mfrow=c(2,1))
plot(dat1)
plot(dat2)
#hw_lect14_2
dat1 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat1.txt",
header = TRUE
)
dat2 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat2.txt",
header = TRUE
)
par(mfrow=c(6,1))
plot(dat1)
plot <- lm(dat1[[1]]~dat1[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[1]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and y has the greatest
# fit with an R-squared value of 50.48861 and a std.dev.
# of error of 459.7. Visually, the plot is mostly linear
# with some dispersion at the lowest and highest point of
# the plot.
plot(dat2)
plot <- lm(dat2[[1]]~dat2[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[1]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and x2 has the greatest
# fit with an R-squared value of 400.3 and a std.dev.
# of error of 103.4. Visually, the plot shows a high
# relation in interaction and collinearity between
# x1 and x2. Most data points are allocated in a high
# density, linear fashion.
#hw_lect14_2
dat1 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat1.txt",
header = TRUE
)
dat2 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat2.txt",
header = TRUE
)
par(mfrow=c(6,2))
plot(dat1)
plot <- lm(dat1[[1]]~dat1[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[1]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and y has the greatest
# fit with an R-squared value of 50.48861 and a std.dev.
# of error of 459.7. Visually, the plot is mostly linear
# with some dispersion at the lowest and highest point of
# the plot.
plot(dat2)
plot <- lm(dat2[[1]]~dat2[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[1]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and x2 has the greatest
# fit with an R-squared value of 400.3 and a std.dev.
# of error of 103.4. Visually, the plot shows a high
# relation in interaction and collinearity between
# x1 and x2. Most data points are allocated in a high
# density, linear fashion.
#hw_lect14_2
dat1 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat1.txt",
header = TRUE
)
dat2 <- read.table(
"https://www.stat.washington.edu/marzban/390/winter19/hw_3_dat2.txt",
header = TRUE
)
plot(dat1)
plot <- lm(dat1[[1]]~dat1[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[1]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[2]]~dat1[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat1[[3]]~dat1[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and y has the greatest
# fit with an R-squared value of 50.48861 and a std.dev.
# of error of 459.7. Visually, the plot is mostly linear
# with some dispersion at the lowest and highest point of
# the plot.
plot(dat2)
plot <- lm(dat2[[1]]~dat2[[2]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[1]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[2]]~dat2[[3]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[1]])
anova(plot)$"Sum Sq"
plot <- lm(dat2[[3]]~dat2[[2]])
anova(plot)$"Sum Sq"
# The relationship between x1 and x2 has the greatest
# fit with an R-squared value of 400.3 and a std.dev.
# of error of 103.4. Visually, the plot shows a high
# relation in interaction and collinearity between
# x1 and x2. Most data points are allocated in a high
# density, linear fashion.
.0004100
.0004850
.0014100
.0000196
.0006400
37.476
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
}
ntrial = 5000
xbar = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
}
# hw_lect15_1
ntrial = 5000
xbar = numeric(ntrial)
par(mfrow = c(2,1))
max = 0
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
if (x > sum(x))
max = x
}
hist(max, breaks = 10)
# hw_lect15_1
ntrial = 5000
xbar = numeric(ntrial)
par(mfrow = c(2,1))
max = 0
min = 0
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
if (x > sum(x))
max = x
else if (x < sum(x))
min = x
}
hist(max, breaks = 10)
# hw_lect15_1
ntrial = 5000
xbar = numeric(ntrial)
par(mfrow = c(2,1))
max = 0
min = 0
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
if (x > sum(x))
max = x
else if (x < sum(x))
min = x
}
hist(max, breaks = 10)
hist(min, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, breaks = 10)
hist(xmin, breaks = 10)
# hw_lect15_1
ntrial = 5000
xmax = numeric(ntrial)
xmin = numeric(ntrial)
par(mfrow = c(2,1))
for (trial in 1:ntrial) {
x = rnorm(50, 0, 1)
xmax[trial] = max(x)
xmin[trial] = min(x)
}
hist(xmax, main = "Histogram of sample maximum")
hist(xmin, main = "Histogram of sample minimum")
?qqplot
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(y = xbar)
qqplot(1:5000, xbar)
qqplot(1:100, xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:100, xbar)
qqplot(100, xbar)
qqplot(1:5000, xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:5000, xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:10, xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:100, xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:5000, xbar)
mean(xbar)
sd(xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:5000, xbar)
#b
# The midsection of the plot falls at about (2500, 0.5),
# so the mean is at approximately 0.5.
# The standard deviation is calculated using
# mean / sqrt(n), so 0.5 / sqrt(100) falls at approx. 0.05
mean(xbar)
sd(xbar)
# hw_lect15_2
ntrial = 5000
xbar = numeric(ntrial)
for (trial in 1:ntrial) {
x = rexp(100, 2)
xbar[trial] = mean(x)
}
qqplot(1:5000, xbar)
#b
# The midsection of the plot falls at about (2500, 0.5),
# so the mean is at approximately 0.5.
# The standard deviation is calculated using
# mean / sqrt(n), so 0.5 / sqrt(100) falls at approx. 0.05
eat = eat
"eat" = "eat"
"eat" == "eat"
"eat" == "eaT"
0==0
0==0.0000000000000000000001
0+1
1.3
3/2
pi
e
setwd("~/Info 201/finalproject/scripts")
shiny::runApp()
runApp()
runApp()
runApp()
runApp('~/yuh')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
library(styler)
style_file("ui.R")
style_file("server.R")
style_file("ui.R")
paste0(link_1, link_2)
# Convert and combine ISO3 into country's full name
link_1 <- "https://raw.githubusercontent.com/lukes/ISO-3166-Countries"
link_2 <- "-with-Regional-Codes/master/slim-3/slim-3.json"
country_names <- fromJSON(
paste0(link_1, link_2)
)
View(country_names)
country_names2 <- fromJSON("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/slim-3/slim-3.json")
runApp()
runApp()
?renderTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
style_file("ui.R")
style_file("server.R")
style_file("ui.R")
runApp()
lint("ui.R")
library(lintr)
lint("ui.R")
style_file("ui.R")
lint("ui.R")
style_file("ui.R")
lint("ui.R")
style_file("server.R")
lint("server.R")
lint("server.R")
lint("server.R")
style_file("server.R")
lint("server.R")
style_file("server.R")
lint("server.R")
shiny::runApp()
shiny::runApp()
runApp()
